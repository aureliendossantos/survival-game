generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id         String      @id @default(cuid())
  name       String
  email      String?     @unique
  createdAt  DateTime    @default(now())
  characters Character[]
}

model Character {
  id              String           @id @default(cuid())
  name            String
  userId          String
  stamina         Int              @default(10)
  lastStaminaSet  DateTime         @default(now())
  mapId           Int              @default(1)
  x               Int              @default(1)
  y               Int              @default(1)
  map             Map              @relation(fields: [mapId], references: [id])
  cell            Cell             @relation(fields: [mapId, x, y], references: [mapId, x, y])
  user            User             @relation(fields: [userId], references: [id])
  inventory       Inventory[]
  tools           ToolInstance[]
  builtStructures BuiltStructure[]
}

model Item {
  id                Int                   @id @default(autoincrement())
  description       String?
  title             String
  pluralTitle       String?
  inActionLoot      ActionLoot[]
  inActionCost      ActionCost[]
  inInventory       Inventory[]
  inStructure       StructureCost[]
  inStructureRepair StructureRepairCost[]
}

model Tool {
  id                Int              @id @default(autoincrement())
  description       String?
  title             String
  pluralTitle       String?
  durability        Int              @default(1)
  instances         ToolInstance[]
  inAction          Action[]
  inActionLoot      ActionToolLoot[]
  inStructure       Structure[]
  inStructureRepair Structure[]      @relation("StructureRepairTools")
}

model ToolInstance {
  id                String    @id @default(cuid())
  durability        Int
  lastDurabilitySet DateTime  @default(now())
  toolId            Int
  tool              Tool      @relation(fields: [toolId], references: [id])
  inCharacter       Character @relation(fields: [characterId], references: [id])
  characterId       String
}

model Inventory {
  characterId String
  character   Character @relation(fields: [characterId], references: [id])
  itemId      Int
  item        Item      @relation(fields: [itemId], references: [id])
  quantity    Int       @default(0)

  @@unique([characterId, itemId])
}

model Map {
  id         Int         @id @default(autoincrement())
  cells      Cell[]
  characters Character[]
}

model Cell {
  id              String           @id @default(cuid())
  mapId           Int
  x               Int
  y               Int
  terrainId       String           @default("plains")
  builtStructures BuiltStructure[]
  map             Map              @relation(fields: [mapId], references: [id])
  terrain         Terrain          @relation(fields: [terrainId], references: [id])
  characters      Character[]

  @@unique([mapId, x, y])
}

model Terrain {
  id          String   @id
  title       String   @default("Plaines")
  description String?
  stamina     Int      @default(0)
  cells       Cell[]
  actions     Action[]
}

model BuiltStructure {
  id                String           @id @default(cuid())
  durability        Int
  lastDurabilitySet DateTime         @default(now())
  cellId            String
  structureId       Int
  cell              Cell             @relation(fields: [cellId], references: [id])
  structure         Structure        @relation(fields: [structureId], references: [id])
  contributors      Character[]
  moduleOfId        String?
  moduleOf          BuiltStructure?  @relation("BuiltStructureModules", fields: [moduleOfId], references: [id])
  modules           BuiltStructure[] @relation("BuiltStructureModules")
}

model Structure {
  id                Int                   @id @default(autoincrement())
  title             String
  description       String?
  minDurability     Int                   @default(30)
  maxDurability     Int                   @default(40)
  requiredItems     StructureCost[]
  requiredTools     Tool[]
  repairMaterials   StructureRepairCost[]
  repairTools       Tool[]                @relation("StructureRepairTools")
  repairAmount      Int                   @default(20)
  actions           Action[]
  moduleOfId        Int?
  moduleOf          Structure?            @relation("StructureModules", fields: [moduleOfId], references: [id])
  modules           Structure[]           @relation("StructureModules")
  upgradeOfId       Int?
  upgradeOf         Structure?            @relation("StructureUpgrades", fields: [upgradeOfId], references: [id])
  availableUpgrades Structure[]           @relation("StructureUpgrades")
  builtStructures   BuiltStructure[]
}

model StructureCost {
  itemId      Int
  quantity    Int       @default(0)
  structureId Int
  item        Item      @relation(fields: [itemId], references: [id])
  structure   Structure @relation(fields: [structureId], references: [id])

  @@unique([structureId, itemId])
}

model StructureRepairCost {
  itemId      Int
  quantity    Int       @default(0)
  structureId Int
  item        Item      @relation(fields: [itemId], references: [id])
  structure   Structure @relation(fields: [structureId], references: [id])

  @@unique([structureId, itemId])
}

model Action {
  id             Int              @id @default(autoincrement())
  title          String
  description    String?
  stamina        Int              @default(0)
  probability    Int              @default(100)
  successMessage String           @default("Vous avez réussi !")
  failureMessage String?          @default("Vous avez échoué.")
  requiredItems  ActionCost[]
  requiredTools  Tool[]
  loot           ActionLoot[]
  toolLoot       ActionToolLoot[]
  terrains       Terrain[]
  structure      Structure?       @relation(fields: [structureId], references: [id])
  structureId    Int?
}

model ActionCost {
  itemId   Int
  quantity Int    @default(1)
  actionId Int
  item     Item   @relation(fields: [itemId], references: [id])
  action   Action @relation(fields: [actionId], references: [id])

  @@unique([actionId, itemId])
}

model ActionLoot {
  itemId      Int
  minQuantity Int    @default(1)
  maxQuantity Int    @default(1)
  actionId    Int
  action      Action @relation(fields: [actionId], references: [id])
  item        Item   @relation(fields: [itemId], references: [id])

  @@unique([actionId, itemId])
}

model ActionToolLoot {
  toolId      Int
  minQuantity Int    @default(1)
  maxQuantity Int    @default(1)
  actionId    Int
  action      Action @relation(fields: [actionId], references: [id])
  tool        Tool   @relation(fields: [toolId], references: [id])

  @@unique([actionId, toolId])
}
